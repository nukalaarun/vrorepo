<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="getDeploymentVm" result-type="Any" api-version="6.0.0" id="dd5cab37-7538-4e53-ae95-170e0cf872a6" version="0.0.0" allowed-operations="vfe" category-name="com.vmware.pscoe.rba.migration">
  <param n="vra7RestHost" t="REST:RESTHost"><![CDATA[]]></param>
  <param n="vmName" t="string"><![CDATA[]]></param>
  <param n="tenant" t="string"><![CDATA[]]></param>
  <param n="username" t="string"><![CDATA[]]></param>
  <param n="password" t="string"><![CDATA[]]></param>
  <script encoded="false"><![CDATA[var __global = System.getContext() || (function () {
    return this;
}).call(null);

var VROES = __global.__VROES || (__global.__VROES = System.getModule("com.vmware.pscoe.library.ecmascript").VROES());
var ClientsFactory = VROES.importLazy("com.vmware.pscoe.rba.migration/ClientsFactory");
var DeploymentsService = VROES.importLazy("com.vmware.pscoe.ts.vra.deployment/services/DeploymentsService");

var vraClient = ClientsFactory._.ClientsFactory.getVraClient();
var deploymentsSvc = new DeploymentsService._.DeploymentsService(vraClient);

var deploymentId = System.getContext().getParameter("__metadata_targetId");
var paramsDeploymentRes = {
    "path_depId": deploymentId
};
var response = deploymentsSvc.getDeploymentResourcesUsingGET2(paramsDeploymentRes);
if (response.status < 200 || response.status >= 300) {
    throw new Error("Unable to get resources for deployment " + deploymentId + ". Error: " + response.status + " " + response.body.message);
}
var deploymentVms = response.body.content.filter(function (resource) { return resource.type === 'Cloud.vSphere.Machine'; });

System.log("Deployment VMs: " + JSON.stringify(deploymentVms, null, 4));
if (deploymentVms.length > 1) {
    throw new Error("Deployment " + deploymentId + " contains more than one VM.");
}
if (deploymentVms.length < 1) {
    throw new Error("Deployment " + deploymentId + " contains no VMs.");
}

return deploymentVms[0];]]></script>
</dunes-script-module>