<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item16" object-name="workflow:name=generic" id="76cfd0e2-2422-49de-bc5a-5a7d1a8592a2" version="1.0.0" api-version="6.0.0" allowed-operations="vfe" editor-version="2.0" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Clone All VMs]]></display-name>
  <position y="26.42086265440315" x="8.14867952694069"/>
  <input>
    <param name="vmFolder" type="VC:VmFolder">
      <description><![CDATA[VM Folder object in which to place the cloned VMs for the new blueprint]]></description>
    </param>
    <param name="allVmProperties" type="Array/Properties">
      <description><![CDATA[array of all the VMs properties needed for the cloning process]]></description>
    </param>
    <param name="snapshotName" type="string">
      <description><![CDATA[snapshot name to create on the newly cloned VMs for linked clone purposes]]></description>
    </param>
    <param name="NsxtConfiguration" type="boolean"/>
    <param name="linkedCloneConfiguration" type="boolean"/>
  </input>
  <attrib name="newVmName" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="sourceVmUuid" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="wfToken" type="WorkflowToken" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="counter" type="number" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="wfTokenArray" type="Array/WorkflowToken" read-only="false">
    <value encoded="n"><![CDATA[[]]]></value>
  </attrib>
  <attrib name="clonesFinished" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="sleepTime" type="number" read-only="false">
    <value encoded="n"><![CDATA[30.0]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <in-binding/>
    <position y="25.465582416264255" x="746.3289299980092"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item4" type="condition" alt-out-name="item6" comparator="0">
    <display-name><![CDATA[All Clones Started?]]></display-name>
    <script encoded="false"><![CDATA[// Generated by the system, cannot be edited
return (counter === 0);]]></script>
    <in-binding>
      <bind name="counter" type="number" export-name="counter"/>
    </in-binding>
    <out-binding/>
    <condition name="counter" type="number" comparator="0" label="null">0</condition>
    <description><![CDATA[Custom decision based on a custom script.]]></description>
    <position y="25.465582416264255" x="206.32892999800924"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item0" type="condition" alt-out-name="item10" comparator="0">
    <display-name><![CDATA[All Clones Finished?]]></display-name>
    <script encoded="false"><![CDATA[// Generated by the system, cannot be edited
return (clonesFinished === true);]]></script>
    <in-binding>
      <bind name="clonesFinished" type="boolean" export-name="clonesFinished"/>
    </in-binding>
    <out-binding/>
    <condition name="clonesFinished" type="boolean" comparator="0" label="null"/>
    <description><![CDATA[Custom decision based on a custom script.]]></description>
    <position y="25.465582416264255" x="466.32892999800924"/>
  </workflow-item>
  <workflow-item name="item6" out-name="item14" type="task">
    <display-name><![CDATA[Set Workflow Inputs]]></display-name>
    <script encoded="false"><![CDATA[System.debug("Preparing a clone job");

// getting the props needed as inputs to the next attribute for the current iteration of the array
var cloneProperties = allVmProperties[counter - 1];
sourceVmUuid = cloneProperties.get("vmUuid");
newVmName = cloneProperties.get("tempName");
System.log(sourceVmUuid)
System.log(newVmName)
// error handling
if(newVmName == null || newVmName == "" || sourceVmUuid == null || sourceVmUuid == "")
{
    throw "Error retrieving the needed values for cloning the source VMs"
}

System.debug("Starting a clone job");]]></script>
    <in-binding>
      <bind name="allVmProperties" type="Array/Properties" export-name="allVmProperties"/>
      <bind name="counter" type="number" export-name="counter"/>
    </in-binding>
    <out-binding>
      <bind name="newVmName" type="string" export-name="newVmName"/>
      <bind name="sourceVmUuid" type="string" export-name="sourceVmUuid"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="85.46558241626425" x="286.32892999800924"/>
  </workflow-item>
  <workflow-item name="item9" out-name="item2" type="task">
    <display-name><![CDATA[Add wfToken to array]]></display-name>
    <script encoded="false"><![CDATA[System.debug("workflow was triggered with the following token id: " + wfToken.id);

// if the Array is empty we need to initiate it
if(wfTokenArray.length < 1)
{
    wfTokenArray = [];
}

// add the async workflows token to the array used later on to check the workflows status
wfTokenArray.push(wfToken);]]></script>
    <in-binding>
      <bind name="wfTokenArray" type="Array/WorkflowToken" export-name="wfTokenArray"/>
      <bind name="wfToken" type="WorkflowToken" export-name="wfToken"/>
    </in-binding>
    <out-binding>
      <bind name="wfTokenArray" type="Array/WorkflowToken" export-name="wfTokenArray"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="85.46558241626425" x="146.32892999800924"/>
  </workflow-item>
  <workflow-item name="item10" out-name="item12" type="task">
    <display-name><![CDATA[Check Workflows Status]]></display-name>
    <script encoded="false"><![CDATA[// setting checking paramaters to there initial state
clonesFinished = false;
var blnAllCompleted = true;
var blnCancelAllWFs = false;

// traverse the array of async workflow run tokens to check there status
for each(var wfToken in wfTokenArray)
{
	// if the Workflow has not completed yet
    if((wfToken.state.toLowerCase() == "running") || (wfToken.state.toLowerCase() == "waiting for user interaction") || (wfToken.state.toLowerCase() == "waiting for event or timer"))
	{
		// change the value to false as there are still workflows running
        blnAllCompleted = false;
	}
    // if a workflow run has failed or has been canceled
	else if((wfToken.state.toLowerCase() == "canceled") || (wfToken.state.toLowerCase() == "failed"))
	{
		blnCancelAllWFs = true;
		// we will break as this case is a terminal error
        break;
	}
    // if the workflow completed
	else if(wfToken.state.toLowerCase() == "completed")
	{
		// if all other workflows have not finished yet
        if(blnAllCompleted == false)
		{
			System.debug("There are still WFs being run");
		}
	}
}

// if a workflow fails we need to cancel all still running workflows as there is no need for them to continue running
if(blnCancelAllWFs == true)
{
    System.debug("Cancelling all clone workflows running as there was a failure");
	// traverse the array of workflow tokens
    for each(var wfToken in wfTokenArray)
	{
        // if the workflow is still running we will cancel it
		if((wfToken.state.toLowerCase() == "running") || (wfToken.state.toLowerCase() == "waiting for user interaction") || (wfToken.state.toLowerCase() == "waiting for event or timer"))
		{
            System.debug("canceling the workflow run " + wfToken.id + " which is still running");
			wfToken.cancel;
		}
	}

    // throwing the relevant error back to the main workflow for error handling
	throw "Error: One or more preperations of the VMs failed."
}
// when all clones are finished
if((blnCancelAllWFs == false) && (blnAllCompleted == true))
{
    // set the value telling the workflow to proceed on to the next step
	clonesFinished = true;
    System.debug("Finished cloning all VMs");
}]]></script>
    <in-binding>
      <bind name="wfTokenArray" type="Array/WorkflowToken" export-name="wfTokenArray"/>
    </in-binding>
    <out-binding>
      <bind name="clonesFinished" type="boolean" export-name="clonesFinished"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="85.46558241626425" x="535.3289299980092"/>
  </workflow-item>
  <workflow-item name="item12" out-name="item4" type="condition" alt-out-name="item13" comparator="0">
    <display-name><![CDATA[Decision]]></display-name>
    <script encoded="false"><![CDATA[// Generated by the system, cannot be edited
return (clonesFinished === true);]]></script>
    <in-binding>
      <bind name="clonesFinished" type="boolean" export-name="clonesFinished"/>
    </in-binding>
    <out-binding/>
    <condition name="clonesFinished" type="boolean" comparator="0" label="null"/>
    <description><![CDATA[Custom decision based on a custom script.]]></description>
    <position y="135.46558241626425" x="469.32892999800924"/>
  </workflow-item>
  <workflow-item name="item13" prototype-id="sleep" out-name="item4" content-mode="x" type="task">
    <display-name><![CDATA[Sleep 30 Seconds]]></display-name>
    <script encoded="false"><![CDATA[//Auto-generated script
if ( sleepTime !== null )  {
	System.sleep(sleepTime * 1000);
}else  {
	throw "'sleepTime' is NULL"; 
}]]></script>
    <in-binding>
      <bind name="sleepTime" type="number" export-name="sleepTime">
        <description><![CDATA[Time to sleep in seconds]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Sleep a given number of seconds.]]></description>
    <position y="85.5" x="405.0"/>
  </workflow-item>
  <workflow-item name="item14" out-name="item15" type="task" launched-workflow-id="117f44f1-7ab2-4eee-b1f9-7e63f022fc7b">
    <display-name><![CDATA[Asynchronous element]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
var workflowToLaunch = Server.getWorkflowWithId("117f44f1-7ab2-4eee-b1f9-7e63f022fc7b");
if (workflowToLaunch == null) {
	throw "Workflow not found";
}

var workflowParameters = new Properties();
workflowParameters.put("vmFolder",vmFolder);
workflowParameters.put("newVmName",newVmName);
workflowParameters.put("sourceVmUuid",sourceVmUuid);
workflowParameters.put("snapshotName",snapshotName);
workflowParameters.put("NsxtConfiguration",NsxtConfiguration);
workflowParameters.put("linkedCloneConfiguration",linkedCloneConfiguration);
wfToken = workflowToLaunch.execute(workflowParameters);
]]></script>
    <in-binding>
      <bind name="vmFolder" type="VC:VmFolder" export-name="vmFolder">
        <description><![CDATA[the VM Folder to create the new VM in]]></description>
      </bind>
      <bind name="newVmName" type="string" export-name="newVmName">
        <description><![CDATA[the name of the VM to be created]]></description>
      </bind>
      <bind name="sourceVmUuid" type="string" export-name="sourceVmUuid">
        <description><![CDATA[the UUID of the source VM to help find it in the VC inventory]]></description>
      </bind>
      <bind name="snapshotName" type="string" export-name="snapshotName">
        <description><![CDATA[snapshot name for linked clone purposes to be created on the cloned VM]]></description>
      </bind>
      <bind name="NsxtConfiguration" type="boolean" export-name="NsxtConfiguration"/>
      <bind name="linkedCloneConfiguration" type="boolean" export-name="linkedCloneConfiguration"/>
    </in-binding>
    <out-binding>
      <bind name="wfToken" type="WorkflowToken" export-name="wfToken"/>
    </out-binding>
    <description><![CDATA[Start an asynchronous workflow.]]></description>
    <position y="145.46558241626425" x="286.32892999800924"/>
  </workflow-item>
  <workflow-item name="item15" prototype-id="decrease-counter" out-name="item9" content-mode="x" type="task">
    <display-name><![CDATA[Decrease counter]]></display-name>
    <script encoded="false"><![CDATA[//Auto-generated script
counter = counter - 1;]]></script>
    <in-binding>
      <bind name="counter" type="number" export-name="counter">
        <description><![CDATA[Item to decrease]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="counter" type="number" export-name="counter">
        <description><![CDATA[Decreased item]]></description>
      </bind>
    </out-binding>
    <description><![CDATA[Decrement a counter by one.]]></description>
    <position y="145.46558241626425" x="146.32892999800924"/>
  </workflow-item>
  <workflow-item name="item16" out-name="item2" type="task">
    <display-name><![CDATA[Set Counter]]></display-name>
    <script encoded="false"><![CDATA[// setting the counter with the count of the VMs to be cloned
counter = allVmProperties.length]]></script>
    <in-binding>
      <bind name="allVmProperties" type="Array/Properties" export-name="allVmProperties"/>
    </in-binding>
    <out-binding>
      <bind name="counter" type="number" export-name="counter"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="36.0" x="79.0"/>
  </workflow-item>
  <presentation/>
</workflow>